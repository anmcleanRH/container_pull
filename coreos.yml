---
- hosts: localhost
  gather_facts: True
  tags: 
    - ocp
  vars:
  pre_tasks:
    - name: facts
      setup:
      tags: always
  tasks:
    - name: create paths
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ bin_path }}"
        - "{{ release_path }}"
        - "{{ olm_dir }}"
        - "{{ import_root }}/repo"
        - "{{ registry_path }}"
      tags: init
    - name: grab coreos media
      command: "/bin/wget --recursive --directory-prefix {{import_root}}/repo --cut-dirs 1 -R 'index.html*,*nightly*' -np {{ item }}"
      loop:
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-openstack.x86_64.qcow2.gz"
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-metal.x86_64.raw.gz"
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-live-initramfs.x86_64.img"
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-live-kernel-x86_64"
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-live-rootfs.x86_64"
        - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/{{ ocp_ver }}/{{coreos_tag}}/rhcos-live.x86_64.iso"
        - "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_tag }}/openshift-client-linux-{{ocp_tag}}.tar.gz"
        - "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_tag }}/openshift-client-windows-{{ocp_tag}}.zip"
        - "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_tag }}/openshift-install-linux-{{ocp_tag}}.tar.gz"
        - "http://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_tag }}/opm-linux-{{ocp_tag}}.tar.gz"
      tags: wget,binary
    - name: extract binary
      unarchive:
        src: "{{ item }}"
        dest: "{{bin_path}}"
      loop:
        - "{{import_root}}/repo/mirror.openshift.com/openshift-v4/clients/ocp/{{ocp_tag}}/openshift-client-linux-{{ocp_tag}}.tar.gz"
        - "{{import_root}}/repo/mirror.openshift.com/openshift-v4/clients/ocp/{{ocp_tag}}/openshift-install-linux-{{ocp_tag}}.tar.gz"
        - "{{import_root}}/repo/mirror.openshift.com/openshift-v4/clients/ocp/{{ocp_tag}}/opm-linux-{{ocp_tag}}.tar.gz"
    - name: get ocp4 images
      shell: "{{bin_path}}/oc adm -a {{auth_file}} release mirror  quay.io/openshift-release-dev/ocp-release:{{ocp_tag}}-x86_64 --to-dir {{release_path}}"
      tags: 
        - ocp-release
      register: release_mirror
    # see https://github.com/ansible/ansible/issues/56243#issuecomment-562657109
    - name: deal with copy bug
      file:
        path: "{{release_path}}/mirror.out"
        state: touch
    - name: preserve mirror output for high side
      copy:
        content: "{{release_mirror}}"
        dest: "{{release_path}}/mirror.out"
      tags: ocp-release
    - name: clear cache
      file:
        path: "{{olm_dir}}/{{item.name}}"
        state: absent
        force: yes
      loop: "{{ operator_indexes }}"
      tags: olm
    - name: clear cache
      file:
        path: "{{olm_dir}}/{{item.name}}/image"
        state: directory
      loop: "{{ operator_indexes }}"
      tags: olm
    - name: mirror indexes
      shell: "skopeo copy docker://{{item.image}} docker://{{mirror_registry}}/{{item.image}}"
      loop: "{{ operator_indexes }}"
      tags: 
        - olm
    - name: mirror catalog refs
      shell: "{{bin_path}}/oc adm catalog mirror {{mirror_registry}}/{{item.image}} {{mirror_registry}}/{{item.name}}-{{ocp_tag}} -a {{auth_file}} --icsp-scope=registry --to-manifests={{olm_dir}}/{{item.name}} --index-filter-by-os=linux/amd64"
      tags: 
        - olm
      loop: "{{ operator_indexes}}"
        #    - name: mirror images
        #      shell: |
        #        awk -F '[/=@:]' '{ if (NF==10) system("skopeo copy --all docker://"$1"/"$2"/"$3"@sha256:"$5" docker://registry.mirror:5000/"$1"/"$2":"$10" --authfile /var/lib/import/plays/auth.json")}' /var/lib/import/olm/{{item.name}}/mapping.txt 
        #      tags: olm
        #      loop: "{{ operator_indexes }}"
